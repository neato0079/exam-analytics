To do:
- Create mock .csv of exam data
- pass .csv from cli to Django app to be parsed
- figure out what data structure will be created from the csv to be used by frontend graphing app
- 
...

django will take a csv supplied by the user
csv will be converted to a data structure
data will be passed to frontend to generated a graph to be displayed in the browser

csv should be organized as such:
Exam Complete Date/Tm,    Order Procedure Accession,  Exam Order Date/Time,   Final Date/Tm,   Exam Order Name   

notes:

Once the app is in a presentable state, use PyInstaller to package the project into an exe. Be sure to configure PyInstaller to start the Django server and then open up the browser to localhost:8000 when the exe is ran. 

Also do error handling for if port 8000 is not free

maybe make a data class

csv
	- filters
		- by date
			- year
			- month
			- day
			- weekend
		- by modality
		- by shift
		

		- order priority
		- ordering physician
		- TAT

11/21:

Currently, the user uploaded csv is stored in a django session. This should be fine for development but look into other ways to store that data for production. A session isn't meant for large files so it will cause preformance problems during production.

maybe set up a db or have the app save the csv on disk and just read from there